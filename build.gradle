plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0-RC'
}

group = 'red.man10'
version = '2.0'

repositories {
    mavenCentral()
    maven {name = 'papermc-repo'
    url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    compileOnly fileTree(dir: 'libs', include: '*.jar')
    compileOnly 'io.papermc.paper:paper-api:1.19.1-R0.1-SNAPSHOT'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compileOnly 'com.github.dmulloy2:ProtocolLib:5.0.0'
    implementation 'org.bytedeco:javacv:1.5.6'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")
}
def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
jar {
    duplicatesStrategy= DuplicatesStrategy.EXCLUDE
    from {
        configurations.compileClasspath.collect { // .jarファイルに含める
            it.isDirectory() ? it : zipTree(it)
        }
    }
}